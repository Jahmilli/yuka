{
    "swagger": "2.0",
    "info": {
        "description": "This is the Yuka API Server.",
        "title": "Yuka API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/v1/users": {
            "post": {
                "description": "Creates a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "User Create",
                        "name": "create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "description": "Gets users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User for specified id",
                "operationId": "getUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Update",
                        "name": "create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateUserInput": {
            "type": "object",
            "required": [
                "auth_id",
                "current_organization_id",
                "device_token",
                "username"
            ],
            "properties": {
                "auth_id": {
                    "type": "string"
                },
                "current_organization_id": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateUserInput": {
            "type": "object",
            "properties": {
                "current_organization_id": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.BaseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something bad"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "auth_id": {
                    "type": "string"
                },
                "current_organization_id": {
                    "type": "string"
                },
                "device_token": {
                    "description": "TODO: This should be in a separate table but for now we'll just store it here",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "aa22666c-0f57-45cb-a449-16efecc04f2e"
                },
                "username": {
                    "description": "Organizations         []Organization `json:\"organizations\" gorm:\"many2many:user_organizations;\"`",
                    "type": "string"
                }
            }
        },
        "models.ValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something bad"
                },
                "field": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}